#In this SQL, I'm querying a database to quantify statistics about items in a superstore.

#1. Write your own SQL query that uses a SELECT statement to order the items by price.

SELECT price
FROM superstore
ORDER BY price;

#2. Write your own SQL query that will show a statistic about the item prices, like a sum, average, minimum, maximum, or count. Remember to add a semi-colon to the end of each of your queries to tell the database where each query ends.

SELECT SUM(price)
FROM superstore;

SELECT COUNT(price)
FROM superstore;

SELECT MAX(price)
FROM superstore;

SELECT MIN(price)
FROM superstore;

SELECT AVG(price)
FROM superstore;

#3. Write your own SQL query that will show a statistic about the price for items in the category of "Kitchen Supplies". The values in the categories column are called text strings, and text strings are case sensitive. That means if you want to select "Kitchen Supplies", you will need to type it exactly as it appears in the data, ie with a capital "K" and a capital "S".

SELECT COUNT(price)
FROM superstore
WHERE category = "Kitchen Supplies";

SELECT SUM(price)
FROM superstore
WHERE category = "Kitchen Supplies";

SELECT MAX(price)
FROM superstore
WHERE category = "Kitchen Supplies";

SELECT MIN(price)
FROM superstore
WHERE category = "Kitchen Supplies";

SELECT AVG(price)
FROM superstore
WHERE category = "Kitchen Supplies";

#4. Come up with your own question about the data and try to answer it using SQL. For example: How many air purifiers are in stock? It's okay if you can't figure out how to answer your question, the idea here is to practice thinking about what kinds of insights you can get from a dataset from asking questions about it.

How many air purifiers are in stock?

SELECT item_name, stock_quantity
FROM superstore
WHERE item_name = "Air Purifier";

Which item has the lowest average rating?

SELECT item_name, average_rating
FROM superstore
ORDER BY average_rating;
