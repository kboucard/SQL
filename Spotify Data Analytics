#For this project, I downloaded Spotify data from Kaggle and created a table to insert Spotify data into. I performed analytics on the data using SQL.


CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )


#ANALYSIS

#1. What is the average danceability by artist and track?

SELECT artist_name, track_name, AVG(danceability) AS avgdance
FROM BIT_DB.Spotifydata
Group by artist_name;

#2. Who are the top 10 artists based on popularity?

SELECT distinct artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC;

#3. What artist released the longest song?

SELECT artist_name, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms DESC;

#4. What's the average danceability for the 10 most popular songs?

SELECT AVG(danceability) AS avg_d
FROM BIT_DB.Spotifydata
WHERE track_name IN
(SELECT track_name FROM BIT_DB.Spotifydata
ORDER BY popularity DESC 
LIMIT 10);


#5. Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.

WITH tempTable AS
(SELECT AVG(s.popularity) AS avg_p, s.artist_name
FROM Spotifydata s
GROUP BY s.artist_name)

SELECT avg_p, artist_name, 'Top Star' AS tag
FROM tempTable
WHERE avg_p >= 90;
